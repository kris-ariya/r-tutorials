group <- rep(c("exp1", "exp2", "ctrl"), times = 10)
group <- rep(c("exp1", "exp2", "ctrl"), times = 10)
group
group <- rep(c("exp1", "exp2", "ctrl"), times = 10)
group
set.seed(2475) # you can pick any value for a seed. This will help when you need to replicate the results.
random_vector <- sample.int(30, size = 30, replace = FALSE)
random_vector
random_group <- group[random_vector]
random_group
id <- 1:30
c(id, randomgroup)
c(id, random_group)
c(id; random_group)
cbind(id, random_group)
set <- rep(1:10, each = 3)
set <- rep(1:10, each = 3)
set
random_set_group <- group[order(set, random_vector)]
random_set_group
random_set_group <- group[order(set, random_vector)]
random_set_group <- group[order(random_vector, set)]
random_set_group
o <- order(set, random_vector)
o
random_set_group <- group[order(set, random_vector)]
random_set_group <- group[order(random_vector, set)]
random_set_group
set <- rep(1:10, each = 3)
set
random_within_set <- order(set, random_vector)
random_within_set
random_within_set <- order(set, random_vector)
random_within_set
random_set_group <- group[order(set, random_vector)]
random_set_group <- group[order(random_vector, set)]
random_set_group
random_within_set <- order(set, random_vector)
random_within_set
random_set_group <- group[random_within_set]
random_set_group
random_set_group <- group[random_within_set]
cbind(id, random_set_group)
set.seed(2475) # you can pick any value for a seed. This will help when you need to replicate the results.
random_vector <- runif(30)
random_vector
set.seed(2475) # you can pick any value for a seed. This will help when you need to replicate the results.
random_vector <- runif(30)
random_vector
set.seed(2475) # you can pick any value for a seed. This will help when you need to replicate the results.
random_vector <- runif(30)
random_vector
random_group <- group[random_vector]
random_group
random_group <- group[random_vector]
random_group
set.seed(2475) # you can pick any value for a seed. This will help when you need to replicate the results.
random_vector <- sample.int(30, size = 30, replace = FALSE)
random_vector
random_group <- group[random_vector]
random_group
cbind(id, random_group)
id <- 1:30
group <- rep(c("exp1", "exp2", "ctrl"), times = 10)
set.seed(2475) # set.seed before a random function.
random_vector <- sample.int(30, size = 30, replace = FALSE)
setwd("~/Library/CloudStorage/OneDrive-ChulalongkornUniversity/Documents/GitHub/r-tutorials")
rmarkdown::render_site()
install.packages("pwr")
rmarkdown::render_site()
install.packages("tidyverse")
rmarkdown::render_site()
install.packages("car", "afex")
install.packages("car")
rmarkdown::render_site()
install.packages("effectsize")
rmarkdown::render_site()
install.packages("psych")
rmarkdown::render_site()
install.packages("apaTables")
rmarkdown::render_site()
install.packages("emmeans")
rmarkdown::render_site()
install.packages("rstatix")
rmarkdown::render_site()
install.packages("afex")
rmarkdown::render_site()
install.packages("jmv")
rmarkdown::render_site()
install.packages("Rmisc")
rmarkdown::render_site()
install.packages("gridExtra")
rmarkdown::render_site()
install.packages("datarium")
rmarkdown::render_site()
install.packages("BSDA")
rmarkdown::render_site()
install.packages("careless")
rmarkdown::render_site()
install.packages("Hmisc")
rmarkdown::render_site()
install.packages("fastDummies")
rmarkdown::render_site()
?describe
hist(household_solar_data$age)
boxplot(household_solar_data$age)
hist(household_solar_data$age)
boxplot(household_solar_data$age)
getwd() #see current working directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) #Use this code to set working directory to the source file location
rmarkdown::render_site()
install.packages("rockchalk")
rmarkdown::render_site()
