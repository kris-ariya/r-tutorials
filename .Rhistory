random_set_group <- group[random_within_set] # sort group with random_within_set
id <- 1:30
group <- rep(c("exp1", "exp2", "ctrl"), times = 10)
group
set.seed(2475) # you can pick any value for a seed. This will help when you need to replicate the results.
random_vector <- sample.int(30, size = 30, replace = FALSE)
random_vector
random_group <- group[random_vector]
random_group
cbind(id, random_group)
id <- 1:30
group <- rep(c("exp1", "exp2", "ctrl"), times = 10)
set.seed(2475) # set.seed before a random function.
random_vector <- sample.int(30, size = 30, replace = FALSE)
set <- rep(1:10, each = 3)
set
random_within_set <- order(set, random_vector)
random_within_set
random_set_group <- group[random_within_set] # sort group with random_within_set
cbind(id, random_set_group, set)
donation <- sample.int(153, 500, replace = TRUE)
donation
hist(donation)
donation <- sample.int(153*2, 500, replace = TRUE)
contect <- c(rep("chula", 153), rep("tham", 153))
rep(c("threat","non-threat"), 77)
threat <- rep(c("threat","non-threat"), 77)
threat <- c(rep(c("threat","non-threat"), 76), "threat")
donation <- sample.int(153*2, 500, replace = TRUE)
contect <- c(rep("chula", 153), rep("tham", 153))
threat <- c(rep(c("threat","non-threat"), 153), "threat")
donation <- sample.int(153*2, size = 500, replace = TRUE)
contect <- c(rep("chula", 153), rep("tham", 153))
donation <- sample.int(153*2, size = 500, replace = TRUE)
contect <- c(rep("chula", 153), rep("tham", 153))
threat <- c(rep(c("threat","non-threat"), 153), "threat")
donation <- sample.int(n = 153*2, size = 500, replace = TRUE)
donation <- sample.int(n = 306, size = 500, replace = TRUE)
donation <- sample.int(n = 306, size = 500)
donation <- runif(153 *2, 50, 100)
contect <- c(rep("chula", 153), rep("tham", 153))
threat <- c(rep(c("threat","non-threat"), 153), "threat")
threat <- c(rep(c("threat","non-threat"), 153))
threat
threat <- rep(c("threat","non-threat"), 153)
threat
group_iden <- recp(c("low", "med", "high"), 153)
group_iden <- rep(c("low", "med", "high"), 153)
group_iden <- rep(c("low", "med", "high"), 102)
dat <- data.frame(context, threat, group_iden, donation)
donation <- runif(153 *2, 50, 100)
context <- c(rep("chula", 153), rep("tham", 153))
threat <- rep(c("threat","non-threat"), 153)
group_iden <- rep(c("low", "med", "high"), 102)
dat <- data.frame(context, threat, group_iden, donation)
View(dat)
View(dat)
library(afex)
id <- rep(1:153,2)
don.afex <- aov_car(donation ~ context*threat*group_iden + Error(id/context), data = dat)
dat <- data.frame(id, context, threat, group_iden, donation)
library(afex)
don.afex <- aov_car(donation ~ context*threat*group_iden + Error(id/context), data = dat)
View(dat)
View(dat)
threat <- c(rep(c("threat","non-threat"), 76), "threat")
threat <- rep(c(rep(c("threat","non-threat"), 76), "threat"), 2)
id <- rep(1:153,2)
donation <- runif(153 *2, 50, 100)
context <- c(rep("chula", 153), rep("tham", 153))
threat <- rep(c(rep(c("threat","non-threat"), 76), "threat"), 2)
group_iden <- rep(rep(c("low", "med", "high"), 51),2)
dat <- data.frame(id, context, threat, group_iden, donation)
don.afex <- aov_car(donation ~ context*threat*group_iden + Error(id/context), data = dat)
summary(don.afex)
getwd()
csv.write(dat, "donate.csv")
write.csv(dat, "donate.csv")
pwr.t.test(d=.77, sig.level=.05, power = .9, type = "two.sample", alternative = "greater")
#install.packages("pwr")
library(pwr)
pwr.t.test(d=.77, sig.level=.05, power = .9, type = "two.sample", alternative = "greater")
cohens_d(13.46, 11,23, 4)
cohens_d(13.46, 11,23, 4)
d <- (13.46 - 11.23)/sqrt((4.35^2 + 3.85^2)/2)
d <- (13.46 - 11.23)/sqrt((4.35^2 + 3.85^2)/2)
d
d <- (13.46 - 11.23)/sqrt((4.35^2 + 3.85^2)/2)
d
pwr.t.test(d=d, sig.level=.05, power = .9, type = "two.sample", alternative = "greater")
medium_power <- pwr.t.test(d=.5, sig.level=.05, power = .8, type = "two.sample", alternative = "two.sided")
plot(medium_power)
library(psych)
psych::describeBy(weight ~ group, data = PlantGrowth, mat = TRUE) # This will give us detailed descriptive stats by group
library(apaTables)
apa.1way.table(dv = weight, iv = group, data = PlantGrowth)
# For apaTables, you can also save a Word document file into the workspace
apa.1way.table(dv = weight, iv = group, data = PlantGrowth, filename = "onewaydesciptive.doc")
# Extra: For APA formatted ANOVA table
apa.aov.table(plant.aov, filename = "anovatable.doc")
setwd("~/Library/CloudStorage/OneDrive-SharedLibraries-ChulalongkornUniversity/Experimental Design and Analysis.Group - Documents/General/3 Labs/Lab05-Multiple Comparisons")
adlib_ctrl <- c(18, 20, 21, 16, 15)
twice_ctrl <- c(20, 25, 23, 27, 25)
foodDprv <- c(6, 9, 8, 6, 11)
waterDprv <- c(15, 10, 9, 12, 14)
bothDprv <- c(12, 11, 8, 13, 11)
dat <- data.frame(adlib_ctrl, twice_ctrl, foodDprv, waterDprv, bothDprv)
View(dat)
View(dat)
pivot_longer(dat,
cols = adlib_ctrl:bothDprv,
names_to = "cond")
library(tidyr)
pivot_longer(dat,
cols = adlib_ctrl:bothDprv,
names_to = "cond")
dat
adlib_ctrl <- c(18, 20, 21, 16, 15)
twice_ctrl <- c(20, 25, 23, 27, 25)
foodDprv <- c(6, 9, 8, 6, 11)
waterDprv <- c(15, 10, 9, 12, 14)
bothDprv <- c(12, 11, 8, 13, 11)
dat_wide <- data.frame(adlib_ctrl, twice_ctrl, foodDprv, waterDprv, bothDprv)
library(tidyr)
dat<- pivot_longer(dat,
cols = adlib_ctrl:bothDprv,
names_to = "cond")
dat
View(dat)
dat<- pivot_longer(dat,
cols = adlib_ctrl:bothDprv,
names_to = "cond",
values_to = "ntrial")
dat<- pivot_longer(dat_wide,
cols = adlib_ctrl:bothDprv,
names_to = "cond",
values_to = "ntrial")
dat
boxplot(ntrial ~ cond, dat)
### aov
dp_aov <- aov(ntrial ~ cond, dat)
summary(dp_aov)
### Check and order factor
str(dat$cond)
### Check and order factor
factor(dat$cond)
c <- factor(dat$cond, levels = c("adlib_ctrl",
"twice_ctrl",
"foodDprv",
"waterDprv",
"bothDprv")
)
c
dat$cond <- factor(dat$cond, levels = c("adlib_ctrl",
"twice_ctrl",
"foodDprv",
"waterDprv",
"bothDprv")
)
dat$cond
dat$cond <- factor(dat$cond, levels = c("adlib_ctrl",
"twice_ctrl",
"foodDprv",
"waterDprv",
"bothDprv")
)
dat$cond
dp_aov <- aov(ntrial ~ cond, dat)
summary(dp_aov)
contrast_m <- data.frame("dprv.vs.ctrl"  = c(1/3,  1/3, 1/3, -1/2, -1/2),
"adliv.vs.twice" = c( 1, -1, 0, 0, 0),
"singledprv.vs.doubledprv" = c(0, 0, 1/2, 1/2, -1),
"food.vs.water" = c(0, 0, 1, -1, 0)
)
contrast_m
contrast_m <- data.frame("dprv.vs.ctrl"  = c(-1/2, -1/2, 1/3,  1/3, 1/3),
"adliv.vs.twice" = c( 1, -1, 0, 0, 0),
"singledprv.vs.doubledprv" = c(0, 0, 1/2, 1/2, -1),
"food.vs.water" = c(0, 0, 1, -1, 0)
)
contrast_m
### contrast
dp_emmeans <- emmeans(dp_aov, ~ cond)
# R Key: Lab 05 Multiple Comparison
library(emmeans)
library(tidyr)
dp_emmeans <- emmeans(dp_aov, ~ cond)
summary(dp_emmeans)
dp_emmeans)
dp_emmeans
dp.emm <- emmeans(dp_aov, ~ cond)
dp.emm
contrast(dp.emm, method = contrast_m, adjust = "bonferroni", infer = TRUE)
contrast(dp.emm, method = contrast_m, adjust = "bonferroni")
dp.emm <- emmeans(dp_aov, ~ cond)
dp.emm
dp.cont <- contrast(dp.emm, method = contrast_m, adjust = "bonferroni")
dp.cont
str(dp.cont)
summary(dp.cont)
d <- summary(dp.cont)
dp.emm <- emmeans(dp_aov, ~ cond)
dp.emm
dp.cont <- contrast(dp.emm, method = contrast_m, adjust = "bonferroni")
dp.cont.m <- summary(dp.cont)
dp_aov$coefficients
dp_aov$effects
dp_aov$terms
summary(dp_aov)
### calculate effect size
aov_table <- summary(dp_aov)
aov_table[1]
s_pooled <- sqrt(aov_table[1][3])
aov_table[1][3]
aov_table[1][[1]]
aov_table[1][[1]][[1]]
aov_table[1][[1]][[1]][[3]]
aov_table[1][[1]][[3]][[2]]
s_pooled <- sqrt(aov_table[1][[1]][[3]][[2]])
es.d <- dp.cont.m$estimate/s_pooled
aov_table <- summary(dp_aov)
s_pooled <- sqrt(aov_table[1][[1]][[3]][[2]])
es.d <- dp.cont.m$estimate/s_pooled
es.d
setwd("~/Library/CloudStorage/OneDrive-SharedLibraries-ChulalongkornUniversity/Experimental Design and Analysis.Group - Documents/General/3 Labs/Lab05-Multiple Comparisons")
dat <- read.csv("Data Lab04-Eyesenck.csv", stringsAsFactors=TRUE)
dat$processlvl
## boxplot
boxplot(recall ~ processlvl, dat)
dat.aov <- aov(recall ~ processlvl, dat)
dat.lm <- lm(recall ~ processlvl, dat)
summary(dat.aov)
adlib_ctrl <- c(18, 20, 21, 16, 15)
twice_ctrl <- c(20, 25, 23, 27, 25)
foodDprv <- c(6, 9, 8, 6, 11)
waterDprv <- c(15, 10, 9, 12, 14)
bothDprv <- c(12, 11, 8, 13, 11)
dat_wide <- data.frame(adlib_ctrl, twice_ctrl, foodDprv, waterDprv, bothDprv)
dat<- pivot_longer(dat_wide,
cols = adlib_ctrl:bothDprv,
names_to = "cond",
values_to = "ntrial")
dat
### End data creation
### boxplot
boxplot(ntrial ~ cond, dat)
### Set factor level
dat$cond <- factor(dat$cond, levels = c("adlib_ctrl",
"twice_ctrl",
"foodDprv",
"waterDprv",
"bothDprv")
)
dat$cond
### aov
dp_aov <- aov(ntrial ~ cond, dat)
summary(dp_aov)
### coeff matrix
contrast_m <- data.frame("dprv.vs.ctrl"  = c(-1/2, -1/2, 1/3,  1/3, 1/3),
"adliv.vs.twice" = c( 1, -1, 0, 0, 0),
"singledprv.vs.doubledprv" = c(0, 0, 1/2, 1/2, -1),
"food.vs.water" = c(0, 0, 1, -1, 0),
row.names = levels(dat$cond)
)
contrast_m
## post hoc
dat.emm <- emmeans(dat.aov, ~ cond)
dat.aov <- aov(recall ~ processlvl, dat)
## post hoc
dat.emm <- emmeans(dat.aov, ~ processlvl)
pairs(dat.emm)
TukeyHSD(plant.aov)
TukeyHSD(dat.aov)
dat.emm <- emmeans(dat.aov, ~ processlvl)
pairs(dat.emm, infer = TRUE)
pairs(dat.emm, adjust = "none", infer = TRUE)
pairs(dat.emm)
pairs(dat.emm, adjust = "none")
leveneTest(dat.aov)
leveneTest(dat.aov, dat)
leveneTest(recall ~ processlvl, dat)
library(car)
leveneTest(recall ~ processlvl, dat)
dat <- read.csv("Data Lab04-Eyesenck.csv", stringsAsFactors=TRUE)
dat$processlvl #check level
## boxplot
boxplot(recall ~ processlvl, dat)
## aov
dat.aov <- aov(recall ~ processlvl, dat)
leveneTest(recall ~ processlvl, dat)
summary(dat.aov)
adlib_ctrl <- c(18, 20, 21, 16, 15)
twice_ctrl <- c(20, 25, 23, 27, 25)
foodDprv <- c(6, 9, 8, 6, 11)
waterDprv <- c(15, 10, 9, 12, 14)
bothDprv <- c(12, 11, 8, 13, 11)
dat_wide <- data.frame(adlib_ctrl, twice_ctrl, foodDprv, waterDprv, bothDprv)
dat<- pivot_longer(dat_wide,
cols = adlib_ctrl:bothDprv,
names_to = "cond",
values_to = "ntrial")
dat
### End data creation
### boxplot
boxplot(ntrial ~ cond, dat)
### Set factor level
dat$cond <- factor(dat$cond, levels = c("adlib_ctrl",
"twice_ctrl",
"foodDprv",
"waterDprv",
"bothDprv")
)
dat$cond
### aov
dp_aov <- aov(ntrial ~ cond, dat)
plot(dp_aov)
plot(dp_a)
plot(dp_aov)
### This part is for creating data in R, instead of importing.
adlib_ctrl <- c(18, 20, 21, 16, 15)
twice_ctrl <- c(20, 25, 23, 27, 25)
foodDprv <- c(6, 9, 8, 6, 11)
waterDprv <- c(15, 10, 9, 12, 14)
bothDprv <- c(12, 11, 8, 13, 11)
dat_wide <- data.frame(adlib_ctrl, twice_ctrl, foodDprv, waterDprv, bothDprv)
dat<- pivot_longer(dat_wide,
cols = adlib_ctrl:bothDprv,
names_to = "cond",
values_to = "ntrial")
dat
### End data creation
### boxplot
boxplot(ntrial ~ cond, dat)
### Set factor level
dat$cond <- factor(dat$cond, levels = c("adlib_ctrl",
"twice_ctrl",
"foodDprv",
"waterDprv",
"bothDprv")
)
dat$cond
### aov
dp_aov <- aov(ntrial ~ cond, dat)
plot(dp_aov)
library(emmeans)
library(tidyr)
library(car)
## 1. Food and water deprivation
### This part is for creating data in R, instead of importing.
adlib_ctrl <- c(18, 20, 21, 16, 15)
twice_ctrl <- c(20, 25, 23, 27, 25)
foodDprv <- c(6, 9, 8, 6, 11)
waterDprv <- c(15, 10, 9, 12, 14)
bothDprv <- c(12, 11, 8, 13, 11)
dat_wide <- data.frame(adlib_ctrl, twice_ctrl, foodDprv, waterDprv, bothDprv)
dat<- pivot_longer(dat_wide,
cols = adlib_ctrl:bothDprv,
names_to = "cond",
values_to = "ntrial")
dat
### End data creation
### Set factor level
dat$cond <- factor(dat$cond, levels = c("adlib_ctrl",
"twice_ctrl",
"foodDprv",
"waterDprv",
"bothDprv")
)
dat$cond
plot(dp_aov)
### boxplot
boxplot(ntrial ~ cond, dat)
### aov
dp_aov <- aov(ntrial ~ cond, dat)
plot(dp_aov)
### coeff matrix
contrast_m <- data.frame("dprv.vs.ctrl"  = c(-1/2, -1/2, 1/3,  1/3, 1/3),
"adliv.vs.twice" = c( 1, -1, 0, 0, 0),
"singledprv.vs.doubledprv" = c(0, 0, 1/2, 1/2, -1),
"food.vs.water" = c(0, 0, 1, -1, 0),
row.names = levels(dat$cond)
)
contrast_m
### contrast
dp.emm <- emmeans(dp_aov, ~ cond)
dp.emm
contrast(dp.emm, method = contrast_m, adjust = "bonferroni")
### calculate effect size
dp.cont <- summary(contrast(dp.emm, method = contrast_m, adjust = "bonferroni"))
dp.cont
dp.cont <- summary(contrast(dp.emm, method = contrast_m, adjust = "bonferroni"))
dp.cont$estimate
dp.cont <- summary(contrast(dp.emm, method = contrast_m, adjust = "bonferroni"))
dp.cont$estimate #contrast mean differences
aov_table <- summary(dp_aov)
s_pooled <- sqrt(aov_table[1][[1]][[3]][[2]]) #extract ms_error from aov table
es.d <- dp.cont$estimate/s_pooled
es.d
contrast(dp.emm, method = contrast_m, adjust = "bonferroni")
dp_aov
summary(dp_aov)
library(effectsize)
eta_squared(dp_aov)
summary(dp_aov)
816(816+112)
816/(816+112)
eta_squared(dp_aov)
### boxplot
boxplot(ntrial ~ cond, dat)
dat <- read.csv("Data Lab04-Eyesenck.csv", stringsAsFactors=TRUE)
dat$processlvl #check level
## boxplot
boxplot(recall ~ processlvl, dat)
dat <- read.csv("Data Lab04-Eyesenck.csv", stringsAsFactors=TRUE)
dat$processlvl #check level
## boxplot
boxplot(recall ~ processlvl, dat)
## aov
dat.aov <- aov(recall ~ processlvl, dat)
leveneTest(recall ~ processlvl, dat)
summary(dat.aov)
## post hoc
dat.emm <- emmeans(dat.aov, ~ processlvl)
pairs(dat.emm)
pairs(dat.emm, adjust = "none")
setwd("~/Library/CloudStorage/OneDrive-ChulalongkornUniversity/Documents/GitHub/r-tutorials")
data("PlantGrowth")
plant.aov <- aov(weight ~ group, data = PlantGrowth)
summary(plant.aov)
library(psych)
psych::describeBy(weight ~ group, data = PlantGrowth) # This will give us detailed descriptive stats by group
library(apaTables)
apa.1way.table(dv = weight, iv = group, data = PlantGrowth)
# For apaTables, you can also save a Word document file into the workspace
apa.1way.table(dv = weight, iv = group, data = PlantGrowth, filename = "onewaydesciptive.doc")
# Extra: For APA formatted ANOVA table
apa.aov.table(plant.aov, filename = "anovatable.doc")
summary(PlantGrowth$group)
#or
levels(PlantGrowth$group)
#install.packages("emmeans")
library(emmeans)
contrast_m <- data.frame("trt1trt2.vs.ctrl"  = c(-1,  1/2, 1/2),
"trt1.vs.trt2"      = c( 0,    1,  -1),
row.names = levels(PlantGrowth$group))
# trt1 and trt2 were averaged (each weight 1/2) to compare against crl (-1)
# trt1 (+1) against trt2 (-1). ctrl is leftout (0).
# row.names is to make it easier to see conditions' name.
contrast_m
emmeans(plant.aov, ~ group)
plant.emm <- emmeans(plant.aov, ~ group) # save to an object for later use
contrast(plant.emm, method = contrast_m, adjust = "none", infer = TRUE) # results with no p value adjustment
contrast(plant.emm, method = contrast_m, adjust = "bonferroni", infer = TRUE) # p values adjusted with bonferroni method. Notice that it multiply each p value by the number of comparisons (2).
plant.contrast <- contrast(plant.emm, method = contrast_m, adjust = "bonferroni") # save as an object for plotting
# Plotting contrasts and their confidence interval
plot(plant.contrast)
trt1.trt2 <- subset(PlantGrowth, group == "trt1" | group == "trt2")
psych::describe(trt1.trt2$weight)
ctrl <- subset(PlantGrowth, group == "ctrl")
psych::describe(ctrl$weight)
TukeyHSD(plant.aov) # input is an aov object.
plot(TukeyHSD(plant.aov))
pairs(plant.emm, adjust = "tukey", infer = TRUE) #input is an emm object. Options are similar to contrast, but without `method = `.
plant.pairs <- pairs(plant.emm, adjust = "tukey") #save for later use.
contrast(plant.emm, method = "pairwise", adjust = "tukey", infer = TRUE)
coef(plant.pairs)
plot(plant.pairs)
